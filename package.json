{
  "name": "wstatestorage",
  "version": "0.3.3",
  "description": "Mixin to add persistent state storing functionality to a class. StateStorage solves the common problem to persistently store the state of an object. It let save the state in a specific moment ( for example on process exit ) and to restore the state later ( for example on process start ). Use the module to be more cross-platform, don't repeat yourself and forget about details of implementation you don't worry.",
  "author": "Kostiantyn Wandalen <wanalen@willbe.so>",
  "license": "MIT",
  "main": "staging/dwtools/amid/amixin/aStateStorage.s",
  "files": [
    "staging/dwtools/amid/amixin",
    "production"
  ],
  "scripts": {
    "test": "wtest staging",
    "make_doc": "./doc.sh"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/Wandalen/wStateStorage.git"
  },
  "bugs": {
    "url": "https://github.com/Wandalen/wStateStorage/issues"
  },
  "dependencies": {
    "wTools": "",
    "wProto": "",
    "wFiles": ""
  },
  "devDependencies": {
    "wTesting": "",
    "wstatestorage": "."
  },
  "keywords": [
    "wTools"
  ]
}
